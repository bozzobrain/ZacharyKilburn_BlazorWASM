@page "/boards/{boardpn?}"
@inject IMessageService MessageService
@inject BoardLoader _boards
@inject NavigationManager _nav

@if (selectedBoard == null)
{
	<div class="top-row-body">
		<div class="page-header">
			<h3>Boards</h3>
		</div>
	</div>
	<div class="px-4">
		<div class="grid-container">
			@{

				int index = 0;
				foreach (var b in BoardLoader.Boards)
				{
					<a class="grid-item" href="@b.BoardHref" @onclick="(()=>SelectProject(b.BoardHref))">

						<img src="@b.BoardMainImage">
						<br />
						<br />
						<h5 style="align-items:center;">@b.BoardPN - @b.BoardTitle</h5>
					</a>
					index++;
				}
				@while (index % 3 != 0)
				{
					index++;
					<div class="grid-item"> Coming Soon	</div>
				}
			}
		</div>
	</div>
}
else if (selectedBoard != null)
{
	<div class="top-row-body">
		<div class="board-header">
			<div class="board-title">
				<div class="board-title-pn">
					@selectedBoard.BoardPN - &nbsp
				</div>
				<div class="board-title-title">
					@selectedBoard.BoardTitle
				</div>
			</div>
			<div class="board-date">
				@selectedBoard.BoardDate
			</div>
			<hr />
		</div>
		<div class="board-controls">
			@if (ViewMode == modeOverview)
			{
				<button class="mode-btn active" @onclick="(()=>ViewMode=modeOverview)">Overview</button>
				<button class="mode-btn" @onclick="(()=>ViewMode=modePDF)">Design</button>
			}
			else if (ViewMode == modePDF)
			{
				<button class="mode-btn" @onclick="(()=>ViewMode=modeOverview)">Overview</button>
				<button class="mode-btn active" @onclick="(()=>ViewMode=modePDF)">Design</button>
			}
			@if (selectedBoard.Projects != null)
			{
				foreach (var p in selectedBoard.Projects)
				{
					if(p.ProjectTitleShort!=string.Empty)
					{
						<a class="mode-btn button" href="@p.ProjectHref">@p.ProjectTitleShort</a>
					}
					else
					{
						<a class="mode-btn button" href="@p.ProjectHref">@p.ProjectTitle</a>						
					}
				}
			}
		</div>
	</div>
	<div class="px-4">
		<div class="board-container">
			<BoardLandingContent board="@selectedBoard" ViewMode="@ViewMode"></BoardLandingContent>
		</div>
	</div>
}
@code {
	[Parameter] public string? boardPN { get; set; }

	private static readonly string modeOverview = "overview";
	private static readonly string modePDF = "pdf";
	private string ViewMode = modeOverview;

	private Board? selectedBoard;

	private void SelectProject(string pref)
	{
		_nav.NavigateTo(pref);

	}
	protected override void OnParametersSet()
	{
		if (boardPN != null)
		{
			selectedBoard = BoardLoader.GetBoardByPN(boardPN);
		}
		else
		{
			selectedBoard = null;
		}
		ViewMode = modeOverview;
		MessageService.SendMessage("boardsload");
		base.OnParametersSet();
	}


	private List<string> messages = new List<string>();
	protected override void OnInitialized()
	{
		// subscribe to OnMessage event
		MessageService.OnMessage += MessageHandler;
	}

	public void Dispose()
	{
		// unsubscribe from OnMessage event
		MessageService.OnMessage -= MessageHandler;
	}

	private void MessageHandler(string message)
	{

	}
}
