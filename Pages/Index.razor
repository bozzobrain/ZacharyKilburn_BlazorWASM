@page "/"

@inject IMessageService MessageService
<PageTitle>Zachary Kilburn</PageTitle>
<div class="top-row-body">
	<div class="index-header-name">
		<h3>Zachary Kilburn</h3>
	</div>
	<div class="index-header-sub">
		<h5>BS Electrical Engineering</h5>
	</div>
</div>
<div class="px-4">
	<div class="index-body-container">
		<div class="index-my-image">
			<img src="headshot1.jpg" />
		</div>
		<div class="index-my-description">
			<p>
				I am an experienced engineer with hands-on learning on and off the job. 
				I have a mixture of embedded software and electrical design experience that allows me to understand both domains and how they interact. 
				I have a passion for learning and extensive experiential knowledge. 
				I thrive when presented with a challenge and am persistent when finding a solution, finding it hard to quit until the problem has been resolved. 
				I am ready to find a challenging position where I can bring my passion and exercise my curiosity. <br/>
				
				Since I was very young, I was always intrigued with how things worked. Taking things apart as a kid always got me into trouble, and I am pleased to say that now it tends to be encouraged.<br /><br />

				For the past 5 years I have made electrical engineering not only my job, but my most enjoyed hobby. Many board designs, much 3D printing and code hackery have brought me a lot of joy, despite the constant feeling that everything has already been done before.<br /><br />

				My dream in life has always been to be part of something greater and provide something to humanity, which is something I still strive for in my work and in my hobbies. Any chance I can get to pursue this objective is an opportunity that I am willing to take.<br /><br />
			</p>
		</div>
	</div>
</div>

@code {
	private List<string> messages = new List<string>();
	protected override void OnInitialized()
	{
		// subscribe to OnMessage event
		MessageService.OnMessage += MessageHandler;
		MessageService.SendMessage("project board");
	}

	public void Dispose()
	{
		// unsubscribe from OnMessage event
		MessageService.OnMessage -= MessageHandler;
	}

	private void MessageHandler(string message)
	{

	}
}