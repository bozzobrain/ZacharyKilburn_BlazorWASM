@using System.Text.RegularExpressions;
@using System.Web

@if (ViewMode == "overview")
{

    <div class="boardlanding-container">

      
        <div class="boardlanding-image">
            <img src="@board.BoardMainImage">
        </div>
    <div class="boardlanding-description">

            @((MarkupString)Regex.Replace(Regex.Replace(Regex.Replace(Regex.Replace(Regex.Replace(Regex.Replace(HttpUtility.HtmlEncode(board.BoardDescription), "\n", "<br/>"), "hstart", "<div style=\"font-family: questrial, sans-serif;font-weight:bold;\">"), "hend", "</div>"), "linkstart", "<a style=\"display:contents;\""), "hrefend", ">"), "linkend", "</a>"))

        </div>
    </div>
}
else if (ViewMode == "pdf")
{
    <div class="pdf-embed pdf-boards-projects">
        <object data="@normalPDF(board.BoardPDF)" type="application/pdf">
        </object>
    </div>
}


@code {
    [Parameter] public Board board { get; set; } = BoardLoader.Z5;
    [Parameter] public string ViewMode { get; set; } = "overview";
    private string PDFprefix = @"https://drive.google.com/viewerng/viewer?embedded=true&url=";
    private string googlePDFPrefix = "https://docs.google.com/viewer?url=https://zacharykilburn.com/";
    private string PDFsuffix = @"#toolbar=0&navpanes=0&view=FitWidth";

    //<iframe src="@buildgoogleURL(board.BoardPDF)" style="width:100%; height:650px;" frameborder="0"></iframe>
    private string normalPDF(string pdffile)
    {
        return pdffile + PDFsuffix;
    }
    private string buildPDFURL(string pdffile)
    {
        return PDFprefix + pdffile;
    }
    private string buildgoogleURL(string pdffile)
    {
        return googlePDFPrefix + pdffile + "&embedded=true";
    }
}
